server:
  port: 9110
spring:
  application:
    name: spring-cloud-user # 应用名称，会在Eureka中显示
#  security:
#    user:
#      name: user
#      password: password123
  flyway:
    #不推荐各自模块加一个历史记录表  可根据自己的模块来命名例如：schema_history_ywzx
    table: schema_history_test
    #设为true, 对于已经存在表结构数据，也不会报错，会追加新表
    baseline-on-migrate: true
    #但此时如果有脚本需要启动加载执行的话，脚本的版本号一定要比1大才能执行（注意红色标注），举个例子V1.0__Base_version.sql不会被执行，但V1.1__Base_version.sql就会被执行。
    baseline-version: 1
  datasource:
    druid:
      url: jdbc:mysql://43.128.14.188:4139/user?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=PRC
      username: root
      password: password123
      driverClassName: com.mysql.cj.jdbc.Driver
      initialSize: 5 # 初始建立连接数量
      minIdle: 5  # 最小连接数量
      maxActive: 1000   # 最大连接数量
      maxWait: 10000  # 获取连接最大等待时间，毫秒
      testOnBorrow: true
      testOnReturn: false # 归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 # 配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000   # 连接在连接池的最小生存时间（毫秒）
  redis:
    host: 43.128.14.188
    port: 9991
    password: password123@
#api 自动文档配置
knife4j:
  enable: true
  documents:
    - group: 3.X
      name: 测试自定义标题分组
      # 某一个文件夹下所有的.md文件
      locations: classpath:markdown/*
minio:
  endpoint: http://144.24.80.135:9100
  accesskey: minioadmin
  secretKey: minioadmin